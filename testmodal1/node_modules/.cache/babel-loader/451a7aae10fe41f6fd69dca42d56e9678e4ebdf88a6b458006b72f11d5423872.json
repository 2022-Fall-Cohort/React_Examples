{"ast":null,"code":"var _jsxFileName = \"/Users/jameskocsis/Documents/Jim/2022-Fall-Cohort/repos/Examples/React/React_Examples/testmodal1/src/TestModal.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Toast from 'react-bootstrap/Toast';\n\n// import './TestModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TestModal(props) {\n  console.log(props);\n  if (!props.show) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!props.show && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => props.setShow(true),\n      children: \"Show Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      show: props.show,\n      onClose: () => props.setShow(false),\n      children: /*#__PURE__*/_jsxDEV(Toast.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"mr-auto\",\n          children: \"TestModal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = TestModal;\nvar _c;\n$RefreshReg$(_c, \"TestModal\");","map":{"version":3,"names":["React","Button","Toast","TestModal","props","console","log","show","setShow"],"sources":["/Users/jameskocsis/Documents/Jim/2022-Fall-Cohort/repos/Examples/React/React_Examples/testmodal1/src/TestModal.js"],"sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Toast from 'react-bootstrap/Toast';\n\n// import './TestModal.css';\n\nexport default function TestModal(props) {\n  console.log(props);\n  if (!props.show) {\n    return null;\n  }\n\n  return (\n    <>\n      {!props.show && (\n        <Button onClick={() => props.setShow(true)}>Show Modal</Button>\n      )}\n      <Toast show={props.show} onClose={() => props.setShow(false)}>\n        <Toast.Header>\n          <strong className=\"mr-auto\">TestModal</strong>\n        </Toast.Header>\n      </Toast>\n    </>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;;AAEzC;AAAA;AAAA;AAEA,eAAe,SAASC,SAAS,CAACC,KAAK,EAAE;EACvCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,IAAI,CAACA,KAAK,CAACG,IAAI,EAAE;IACf,OAAO,IAAI;EACb;EAEA,oBACE;IAAA,WACG,CAACH,KAAK,CAACG,IAAI,iBACV,QAAC,MAAM;MAAC,OAAO,EAAE,MAAMH,KAAK,CAACI,OAAO,CAAC,IAAI,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5C,eACD,QAAC,KAAK;MAAC,IAAI,EAAEJ,KAAK,CAACG,IAAK;MAAC,OAAO,EAAE,MAAMH,KAAK,CAACI,OAAO,CAAC,KAAK,CAAE;MAAA,uBAC3D,QAAC,KAAK,CAAC,MAAM;QAAA,uBACX;UAAQ,SAAS,EAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAmB;QAAA;QAAA;QAAA;MAAA;IACjC;MAAA;MAAA;MAAA;IAAA,QACT;EAAA,gBACP;AAEP;AAAC,KAlBuBL,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}